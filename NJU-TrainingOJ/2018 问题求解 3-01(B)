#include <iostream>
#include <cstring>
#include <cmath>
using namespace std;
 
int minn=0x7fffffff;
int ans=0;
 
const int N = 18;
int n,F=0;
int table[1<<N][N];
int walk[1<<N][N];
bool dor[N];
int tim[N][N];
 
int DP(int f, int end){
    if(table[f][end] != 0)
        return table[f][end];
    if(f == (1<<(end-1))){
        table[f][end] = tim[0][end];
        walk[f][end] = 0;
        return tim[0][end];
    }
 
    table[f][end] = 0x7fffffff;
    for(int i(1);i <= n;i++){
        if(i == end || (f&(1<<(i-1))) == 0 || dor[i] == 0){
            continue;
        }
 
        if(table[f][end] >= DP(f^(1<<(end-1)), i) + tim[i][end]){
            table[f][end] = DP(f^(1<<(end-1)), i) + tim[i][end];
            walk[f][end] = i;
        }
    }
    return table[f][end];
}
void get_walk(int f, int end){
    if(end == 0){
        return;
    } else{
        get_walk(f^(1<<(end-1)), walk[f][end]);
        cout << end << " ";
    }
}
 
int main(){
    cin >> n;
    //yao song de wai mai shu liang
    dor[0] = 0;
    //0 hao lou bu yong song wai mai
 
    for(int i=0;i < n;++i){
        cin >> dor[i+1];
        if(dor[i+1]){
            F += 1<<i;
        }
    }
 
    for(int i=0;i <= n;++i){
        for(int j=0;j <= n;++j){
            cin >> tim[i][j];
        }
    }
    memset(table, 0, sizeof(table));
 
    for(int i=1;i <= n;++i){
        if((F&(1<<(i-1))) == 0 || dor[i] == 0){
            continue;
        }
        int term = DP(F, i);
        if(minn >= term){
            minn = term;
            ans = i;
        }
    }
    cout << minn << endl;
    get_walk(F, ans);
 
    return 0;
}
 
/**************************************************************
    Problem: 1536
    User: 171860624
    Language: C++
    Result: 正确
    Time:24 ms
    Memory:38412 kb
****************************************************************/
