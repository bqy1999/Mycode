#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<cmath>
#include<cstring>
#include<string>
#include<iterator>
#include<utility>
#include<valarray>
#include<algorithm>
#include<queue>
using namespace std;
priority_queue<long long ,vector<long long>, greater<long long> >pq;
// "greater<long long>" represents it's a smallest priority queue!
long long n=0;
long long x=0;
long long ans=0;
long long a=0;
long long b=0;
long long c=0;
long long sum=0;
 
int main(){
    cin>>n;
    for(long long i=0;i<n;++i){
        cin>>x;
        pq.push(x);
    }
    if(n%2==0)pq.push(0);
    // let it be a complete haffman tree
    // for example 1 2 3 4
    // let it be 0 1 2 3 4
    // and then be 3 3 4
    // finally 10
    while(pq.size()>1){
        sum=0;
        sum+=pq.top();
        // cout<<pq.top()<<endl;
        pq.pop();
        sum+=pq.top();
        // cout<<pq.top()<<endl;
        pq.pop();
        sum+=pq.top();
        // cout<<pq.top()<<endl;;
        pq.pop();
        ans+=(sum);
        // cout<<"sum:"<<sum<<endl;
        pq.push(sum);
    }
    cout<<ans<<endl;
    return 0;
}
 
/**************************************************************
    Problem: 1540
    User: 171860624
    Language: C++
    Result: 正确
    Time:256 ms
    Memory:3096 kb
****************************************************************/
