/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2018-10-18 20:29
* Filename      : D.cpp
* Description   : 
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const double eps = 1e-6;
const int INF = 0x3f3f3f3f;
const int maxn = 300005;
int f[maxn]={0};
int r[maxn]={0};
bool ju[maxn]={0};
int T,p,K,num = 0;
map<string, int> maps;
 
int find_set(int x){
    if(x != f[x]){
        int t = f[x];
        f[x] = find_set(t);
        r[x] = (r[x] + r[t])%3;
    }
    return f[x];
}
 
int init(string &x){
    map<string, int>::iterator iter;
    iter = maps.find(x);
    if(iter != maps.end()){
        return iter->second;
    }else{
        f[p] = p;
        r[p] = 0;
        ju[p] = true;
        maps[x] = p;
        p++;
        return p-1;
    }
}
 
void check(int n){
    n--;
    for(int i=1; i<=n; ++i){
        printf("%d ",f[i]);
    }
    printf("\n");
    for(int i=1; i<=n; ++i){
        printf("%d ",r[i]);
    }
    printf("\n");
    for(int i=1; i<=n; ++i){
        printf("%d ",ju[i]);
    }
    printf("\n");
}
 
int main(){
    scanf("%d%*c",&T);
    while(T--){
        scanf("%d%*c",&K);
        num = 0;
        p = 1;
        maps.clear();
        int fa,fb,fad,fbd=0;
        while(K--){
            int op=0;
            string a,b;
            scanf("%d%*c",&op);
            switch(op){
                case 0:
                case 1:
                    cin>>a>>b;
                    fa = init(a);
                    fb = init(b);
                    if(op==1 && fa == fb){
                        num++;
                        break;
                    }else if(op ==0 && fa == fb)break;
                    fad = find_set(fa);
                    fbd = find_set(fb);
                    if( fad != fbd ){
                        f[fbd] = fad;
                        r[fbd] = (3 + op + r[fa] - r[fb])%3;
                    }else{
                        if(op==0 && r[fa]!=r[fb]){
                            num++;
                            break;
                        }else if(op == 1 && (3 - r[fa] + r[fb])%3 != op){
                            num++;
                            break;
                        }
                    }
                    ju[fa] = false;
                    ju[fb] = false;
                    break;
                case 2:
                case 3:
                    cin>>a;
                    fa = init(a);
                    if(ju[fa] && op == 2){
                        num++;
                        break;
                    }else if(!ju[fa] && op == 3){
                        num++;
                        break;
                    }else if(op == 3){
                        break;
                    }
                    f[p] = p;
                    r[p] = 0;
                    ju[p] = true;
                    maps[a] = p;
                    p++;
                    break;
            }
        }
        printf("%d\n",num);
    }
    return 0;
}
 
/**************************************************************
    Problem: 1545
    User: 171860624
    Language: C++
    Result: 正确
    Time:352 ms
    Memory:4196 kb
****************************************************************/
