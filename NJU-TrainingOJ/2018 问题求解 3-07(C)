/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2018-11-21 09:58
* Filename      : C1.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const double eps = 1e-6;
const long long INF = 0x3f3f3f3f3f3f3f3f;
#define maxn 200001
#define maxm 400001
ll n, m = 0;
ll fir[maxn], nxt[maxm<<1], to[maxm<<1], cnt;
ll w[maxn], dis[maxn], vis[maxn], len[maxm<<1];
 
struct Node{
    ll u;
    ll dis;
    inline bool operator < (const Node &r)const{
        return dis > r.dis;
    }
};
 
void add_edge(ll a, ll b, ll l){
    len[cnt] = l;
    to[cnt] = b;
    nxt[cnt] = fir[a];
    fir[a] = cnt++;
}
 
priority_queue<Node> q;
 
void dijkstra(ll begin){
    ll u;
    q.push((Node){begin, 0});
    memset(vis, 0, sizeof(vis));
    for(int i(1); i<=n; ++i){
        dis[i] = INF;
        dis[begin] = 0;
    }
    while(!q.empty()){
        u = q.top().u;
        q.pop();
        if(vis[u])continue;
        vis[u] = true;
        for(int i(fir[u]); i!=-1; i=nxt[i]){
            ll v = to[i];
            if(dis[v] > dis[u] + len[i]){
                dis[v] = dis[u] + len[i];
                q.push((Node){v, dis[v]});
            }
        }
    }
}
 
int main(){
    memset(fir, -1, sizeof(fir));
    scanf("%lld%lld%*c", &n, &m);
    for(int i(1); i<=m; ++i){
        ll u, v;
        ll l;
        scanf("%lld%lld%lld%*c", &u, &v, &l);
        add_edge(u, v, l*2);
        add_edge(v, u, l*2);
    }
    for(int i(1); i<=n; ++i){
        scanf("%lld", &w[i]);
        add_edge(0, i, w[i]);
    }
    dijkstra(0);
    for(int i(1); i<n; ++i){
        printf("%lld ", dis[i]);
    }
    printf("%lld\n", dis[n]);
 
    return 0;
}
 
/**************************************************************
    Problem: 1561
    User: 171860624
    Language: C++
    Result: 正确
    Time:580 ms
    Memory:32704 kb
****************************************************************/
