/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2018-12-12 16:05
* Filename      : D.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const double eps = 1e-6;
const int INF = 0x3f3f3f3f;
#include<cstdio>
#include<cmath>
#include<cstring>
#include<algorithm>
#define MAX 300
#define INF 0x7fffffff
using namespace std;
int n, m, sum, ans[505], v[505], M[505][505];

void floyd(){
    for(int k = 1; k <= n; k++){
        for(int i = 1; i <= n; i++){
            if(M[i][k] == 1){
                for(int j = 1; j <= n; j++){
                    if(M[k][j] == 1)
                        M[i][j] = 1;
                }
            }
        }
    }
}

int dfs(int x){
    for(int i = 1; i <= n; i++){
        if(M[x][i] == 1 && v[i] == 0){
            v[i] = 1;
            if(ans[i] == 0 || (ans[i] != 0 && dfs(ans[i]) == 1)){
                ans[i] = x;
                return 1;
            }
        }
    }
    return 0;
}

int main(){
    while(scanf("%d%d", &n, &m) != EOF && (n || m)){
        memset(ans, 0, sizeof(ans));
        memset(M, 0, sizeof(M));
        for(int i = 1; i <= m; i++){
            int x, y;
            scanf("%d%d", &x, &y);
            M[x][y] = 1;
        }
        floyd();
        sum = 0;
        for(int i = 1; i <= n; i++){
            memset(v, 0, sizeof(v));
            int t = dfs(i);
            if(t == 1)
                sum++;
        }
        printf("%d\n", n - sum);
    }
    return 0;
}
