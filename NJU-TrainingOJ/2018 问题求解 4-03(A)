/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2019-03-14 07:49
* Filename      : A.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
#define maxn 505
typedef long long ll;
const double PI = acos(-1.0);
const double EPS = 1e-6;
const int MOD = 1e9+7;
const int INF = 0x3f3f3f3f;
int n = 0;
int cur = 0;
int num[maxn] = {0};
int dp[maxn][maxn] = {0};
bool vis[maxn];
int solve(int left, int right);

int main() {
    scanf("%d", &n);
    // cout<<n<<endl;
    for(int i(1); i<=n; ++i)
        scanf("%d", &num[i]);
    num[0] = 1;
    num[n+1] = 1;
    memset(dp, -1, sizeof(dp));
    printf("%d\n", solve(0,n+1));
    return 0;
}

int solve(int left, int right) {
    if(left==right || left == right-1)
        return 0;
    for(int i(left+1) ; i<right; ++i) {
        if(dp[left][i]==-1)
            dp[left][i] = solve(left, i);
        if(dp[i][right]==-1)
            dp[i][right] = solve(i, right);
        if(num[left]*num[i]*num[right]+dp[left][i]+dp[i][right]>dp[left][right]) {
            dp[left][right] = num[left]*num[i]*num[right]+dp[left][i]+dp[i][right];
            // cur = i;
        }
    }
    // cout<<cur<<endl;
    return dp[left][right];
}
