//注意顺时针和逆时针都是算相同的，不能够简单进行排序，如果顺序不对值一样也算不同的雪花！  
  
  #include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#define maxn 100005
#define mod 90001
using namespace std;

int n=0;
struct snowflakes{
    int arm[6];
    int sum;
}s[maxn];
vector<int> hash1[mod];

bool issame(int a,int b){
    for (int i = 0; i < 6; ++i) {
        if(
                (s[a].arm[0] == s[b].arm[i] &&
           s[a].arm[1]==s[b].arm[(i+1)%6] &&
           s[a].arm[2]==s[b].arm[(i+2)%6] &&
           s[a].arm[3]==s[b].arm[(i+3)%6] &&
           s[a].arm[4]==s[b].arm[(i+4)%6] &&
           s[a].arm[5]==s[b].arm[(i+5)%6])
                ||
           (s[a].arm[0]==s[b].arm[i]&&
           s[a].arm[1]==s[b].arm[(i+5)%6] &&
           s[a].arm[2]==s[b].arm[(i+4)%6] &&
           s[a].arm[3]==s[b].arm[(i+3)%6] &&
           s[a].arm[4]==s[b].arm[(i+2)%6] &&
           s[a].arm[5]==s[b].arm[(i+1)%6])
                )
            return true;
    }

    return false;
}

int main() {
    cin>>n;
    for (int i = 0; i < n; ++i) {
        scanf("%d %d %d %d %d %d",&s[i].arm[0],&s[i].arm[1],&s[i].arm[2],&s[i].arm[3],&s[i].arm[4],&s[i].arm[5]);
        for (int j = 0; j < 6; ++j) {
            s[i].sum+=s[i].arm[j];
        }
    }
    int key=0;
    for (int i = 0; i < n; ++i) {
        key=s[i].sum%mod;

        for (vector<int>::size_type j=0; j<hash1[key].size();++j) {
            if(issame(hash1[key][j],i)){
                cout<<"Twin snowflakes found."<<endl;
                return 0;
            }
        }
        hash1[key].push_back(i);
    }
    cout<<"No two snowflakes are alike."<<endl;

    return 0;
}
