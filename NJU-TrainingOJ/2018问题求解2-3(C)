Strategic Game

#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

#define max 1501
using namespace std;
int t_child[max]={-1};
int t_father[max]={-1};
int tree[max][2];
int n=0;

void DP(int root);

int main(){
    int index=0;
    int childnum=0;
    int childindex=0;

    while (cin>>n){
        int root=-1;
        for (int i = 0; i < n; ++i) {
            scanf("%d:(%d)",&index,&childnum);
            t_child[index]=childnum;
            if(root==-1) {
                root = index;
            }
            for (int j = 0; j < childnum; ++j) {
                cin>>childindex;
                t_father[childindex]=index;
            }
            if(t_father[root]==index){
                root=index;
            }
        }

        DP(root);
        printf("%d\n",min(tree[root][0],tree[root][1]));
    }

    return 0;
}

void DP(int root){
    int be=0;
    int notbe=0;
    if(t_child[root]==0){
        tree[root][0]=0;
        tree[root][1]=1;
        return;
    } else{
        for (int i = 0; i < n; ++i) {
            if(t_father[i]==root){
                DP(i);
                be+=min(tree[i][1],tree[i][0]);
                notbe+=tree[i][1];
            }
        }
        tree[root][1]=be+1;
        tree[root][0]=notbe;
    }
}
