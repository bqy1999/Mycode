Chocolate

#include <iostream>
#include <iomanip>
#define maxn 1005
using namespace std;

double dp[maxn][105];
int c,n,m=0;

int main() {
    while (true){
        cin>>c;
        if(c==0)break;
        cin>>n>>m;
        if(m>c||m>n||(n-m)%2==1){
            cout<<0.000<<endl;
            continue;
        } else{
            if(n>1000)n=1000+n%2;
            dp[0][0]=1.0;
            for (int i = 1; i <= n ; ++i) {
                dp[i][0]=dp[i-1][1]/c;
                dp[i][c]=dp[i-1][c-1]/c;
                for (int j = 1; j <c; ++j) { //这里是j<c而不是j<=c
                    dp[i][j]=dp[i-1][j-1]*(c-j+1)/c+dp[i-1][j+1]*(j+1)/c;
                }
            }
            cout<<fixed<<setprecision(3)<<dp[n][m]<<endl;
        }
    }
    return 0;
}

Tips:
思路是使用dp来求解概率,
重点在于状态转移方程dp[i][j]=dp[i-1][j-1]*(c-j+1)/c+dp[i-1][j+1]*(j+1)/c;
