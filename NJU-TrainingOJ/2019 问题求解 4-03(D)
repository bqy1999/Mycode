/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2019-03-14 07:51
* Filename      : D.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
#define maxn 605
typedef long long ll;
const double PI = acos(-1.0);
const double EPS = 1e-6;
const int MOD = 1e9+7;
const int INF = 0x3f3f3f3f;
int n, m = 0;
int s[maxn] = {0};
int dp[maxn][maxn];
int solve(int left, int right);

int main() {
    scanf("%d%d%*c", &n, &m);
    for(int i(1); i<=n; ++i)
        scanf("%d", &s[i]);
    memset(dp, 0, sizeof(dp));
    dp[1][n] = solve(1, n);
    printf("%d\n", dp[1][n]);
    return 0;
}

int solve(int left, int right) {
    if(left>right)
        return 0;
    else if(left==right)
        return 1;
    int res = INF;
    for(int i(left+1); i<=right; ++i) {
        if(dp[left+1][i-1]==0)
            dp[left+1][i-1] = solve(left+1, i-1);
        if(dp[i][right]==0)
            dp[i][right] = solve(i, right);
        if(res>(s[left]!=s[i])+dp[left+1][i-1]+dp[i][right])
            res = (s[left]!=s[i])+dp[left+1][i-1]+dp[i][right];
    }
    // cout<<"dp[left="<<left<<","<<"right="<<right<<"]="<<res<<endl;
    return res;
}
