/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2019-03-22 10:14
* Filename      : D.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const double EPS = 1e-6;
const int MOD = 1e9+7;
const int INF = 0x3f3f3f3f;

#define MAXN 505
#define MAXM 125005
int n, m = 0;
double ans = 0;
int v[MAXN];
struct Edge {
    int left;
    int right;
    int val;
};

Edge edge[MAXM];

int main() {
    scanf("%d%d%*c", &n, &m);
    for(int i(1); i<=n; ++i)
        scanf("%d", &v[i]);
    ans = 0;
    for(int j(1); j<=m; ++j) {
        int tmp_left, tmp_right, tmp_val;
        scanf("%d%d%d%*c", &tmp_left, &tmp_right, &tmp_val);
        edge[j].left = tmp_left;
        edge[j].right = tmp_right;
        edge[j].val = tmp_val;
        if(ans < (v[edge[j].left]*1.0+v[edge[j].right]*1.0)/(edge[j].val*1.0))
            ans = (v[edge[j].left]*1.0+v[edge[j].right]*1.0)/(edge[j].val*1.0);
    }
    // cout<<ans<<endl;
    printf("%.6f\n", ans);
    return 0;
}
