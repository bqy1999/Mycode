/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2019-03-29 10:05
* Filename      : A.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const double EPS = 1e-6;
const int MOD = 1e9+7;
const int INF = 0x3f3f3f3f;
#define MAXN 1005

int f[MAXN] = {0}; // father
int r[MAXN] = {0}; // rank
bool vis[MAXN];

void init_set(int x) {
    for(int i(1); i<=x; ++i) {
        f[i] = i; // father is itself
        r[i] = i; // rank is zero
    }
}

int find_set(int x) {
    if(f[x]!=x) {
        int fx = f[x];
        f[x] = find_set(f[x]);
        r[x] = (r[x]+r[fx])%2;
    }
    return f[x];
}

void union_set(int a, int b) {
    int fa = find_set(a);
    int fb = find_set(b);
    f[fa] = fb;
    r[fa] = (r[a]+r[b]+1)%2;
}

int main() {
    int n, m = 0;
    int x, y = 0;
    int fx, fy = 0;
    scanf("%d%d%*c", &n, &m);
    init_set(n);
    for(int i(0); i<m; ++i) {
        scanf("%d%d%*c", &x, &y);
        fx = find_set(x);
        fy = find_set(y);
        if(fx!=fy)
            union_set(x, y);
    }
    // cout<<f[1]<<endl;
    // cout<<f[2]<<endl;
    memset(vis, false, sizeof(vis));
    int cnt = 0;
    for(int i(1); i<=n; ++i) {
        int fi = find_set(i);
        if(vis[fi] == false) {
            vis[fi] = true;
            ++cnt;
        } else
            continue;
    }
    printf("%d\n", n-cnt);

    return 0;
}
