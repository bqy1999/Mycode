/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2019-03-29 10:07
* Filename      : D.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const double EPS = 1e-6;
const int MOD = 1e9+7;
const int INF = 0x3f3f3f3f;
#define MAXN 5010
int r[2*MAXN] = {0};
int f[2*MAXN] = {0};

inline void init_set(int x) {
    for(int i(0); i<=2*x; ++i) {
        f[i] = i;
        r[i] = 0;
    }
    return;
}
inline int find_set(int x) {
    if(x!=f[x]) {
        int fx = f[x];
        f[x] = find_set(f[x]);
        r[x] = (r[x]^r[fx]);
    }
    return f[x];
}
inline int union_set(int a, int b, int d) {
    int fa = find_set(a);
    int fb = find_set(b);
    if(fa == fb) {
        if((r[a]^r[b])!=d)
            return 1;
        else
            return 0;
    }
    f[fa] = fb;
    r[fa] = (r[a]+r[b]+d)%2;
    return 0;
}

int main() {
    map<int, int>mp;
    mp.clear();
    int n, m, index = 0;
    scanf("%d%d%*c", &n, &m);
    init_set(MAXN);
    int cnt = 1;
    for(int i(1); i<=m; ++i) {
        int left, right, diff = 0;
        char ch[10];
        scanf("%d%d%s", &left, &right, ch);
        mp[left-1] = (!mp[left-1]) ? (++cnt) : mp[left-1];
        mp[right] = (!mp[right]) ? (++cnt) : mp[right];
        if (strcmp(ch, "even")==0)
            diff = 0;
        else
            diff = 1;
        if(union_set(mp[left-1], mp[right], diff) && !index)
            index = i;
    }
    // cout<<index<<endl;
    if(!index)
        index = m+1;
    printf("%d\n", index-1);
    return 0;
}
