/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2019-04-15 14:03
* Filename      : B.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const double EPS = 1e-6;
const int MOD = 1e9+7;
const int INF = 0x3f3f3f3f;
#define MAXN 305
#define MAXM 46000
int f[MAXN] = {0};
int r[MAXN] = {0};
int N, M = 0;

typedef struct {
    int a;
    int b;
    int price;
} Edge;
Edge edge[MAXM];

int cmp(const void *a, const void *b) {
    return ((Edge*)a)->price - ((Edge*)b)->price;
}


inline void init_set(int n) {
    for(int i(1); i<=n; ++i) {
        f[i] = i;
        r[i] = 0;
    }
}

inline int find_set(int x) {
    if(f[x] != x)
        f[x] = find_set(f[x]);
    return f[x];
}

inline void union_set(int a, int b) {
    int fa = find_set(a);
    int fb = find_set(b);
    if(r[a]>r[b])
        f[fa] = fb;
    else {
        f[fb] = fa;
        if(r[fa] == r[fb])
            ++r[fa];
    }
}

int Krustal(int n) {
    qsort(edge, n, sizeof(edge[0]), cmp);
    // cout<<n<<endl;
    int res = 0;
    for(int i(0); i<n; ++i) {
        // cout<<edge[i].price<<endl;
        if(find_set(edge[i].a)!=find_set(edge[i].b)) {
            union_set(edge[i].a, edge[i].b);
            if(res < edge[i].price)
                res = edge[i].price;
        }
    }
    return res;
}

int main() {
    int a, b, price = 0;
    scanf("%d%d%*c", &N, &M);
    init_set(N);
    for(int i(0); i<M; ++i) {
        scanf("%d%d%d%*c",&a,&b,&price);
        edge[i].a = a;
        edge[i].b = b;
        edge[i].price = price;
    }
    // cout<<N-1<<" "<<Krustal(N)<<endl;
    printf("%d %d\n", N-1, Krustal(M));
    return 0;
}
