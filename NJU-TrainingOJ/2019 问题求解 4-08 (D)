/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2019-04-15 22:39
* Filename      : A.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const double EPS = 1e-6;
const int MOD = 1e9+7;
const int INF = 0x3f3f3f3f;
#define MAXN 100010

int N, M, A[MAXN];
vector<int> G[MAXN];

void dfs(int root, int ret) {
    if(A[root])
        return;
    A[root] = ret;
    for(int i(0); i<G[root].size(); ++i)
        dfs(G[root][i], ret);
}

int main() {
    scanf("%d%d%*c", &N, &M);
    int u, v = 0;
    for(int i(1); i<=M; ++i) {
        scanf("%d%d%*c", &u, &v);
        G[v].push_back(u);
    }
    for(int i(N); i>0; --i)
        dfs(i, i);
    for(int i(1); i<=N; ++i)
        printf("%d ", A[i]);
    printf("\n");
    return 0;
}
