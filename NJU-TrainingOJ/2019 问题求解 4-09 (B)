/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2019-05-05 10:29
* Filename      : B.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const double EPS = 1e-6;
const int MOD = 1e9+7;
const int INF = 0x3f3f3f3f;
#define MAXN 505

int x[MAXN], y[MAXN], n;
double mat[MAXN][MAXN];
double dis[MAXN];
int vis[MAXN];

inline void dijkstra(int s) {
    memset(vis, 0, sizeof(vis));
    for(int i(1); i<=n; ++i)
        dis[i] = INF;
    dis[s] = 0;
    for(int i(1); i<=n; ++i) {
        int tmp = INF, k;
        for(int j(1); j<=n; ++j) {
            if(vis[j]==0 && dis[j]<tmp) {
                k = j;
                tmp = dis[j];
            }
        }
        vis[k] = 1;
        for(int j(1); j<=n; ++j)
            dis[j] = min(dis[j], max(dis[k], mat[k][j]));
    }
}

int main() {
    int q=1;
    scanf("%d",&n);
    memset(mat, 0, sizeof(mat));
    for(int i=1; i<=n; ++i)
        scanf("%d%d%*c",&x[i],&y[i]);
    for(int i=1; i<=n; ++i)
        for(int j=i+1; j<=n; ++j)
            mat[i][j] = mat[j][i] = sqrt(double(x[i]-x[j])*(x[i]-x[j])+double(y[i]-y[j])*(y[i]-y[j]));

    dijkstra(1);

    printf("%.3lf\n", dis[n]);
    return 0;
}
