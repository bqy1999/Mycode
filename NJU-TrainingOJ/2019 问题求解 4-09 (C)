/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2019-05-05 10:29
* Filename      : C.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const double EPS = 1e-6;
const int MOD = 1e9+7;
const int INF = 1000000;
#define MAXN 1005
int dis[MAXN];
int vis[MAXN];
int mp[MAXN][MAXN];
int n,m;
int arr[MAXN]= {0};

void dijkstra(int bg,int en) {
    memset(vis,0,sizeof(vis));
    for(int i(1); i<=n; ++i)
        dis[i]=mp[bg][i];
    int minn, pos;
    for(int i(1); i<=n; ++i) {
        minn=INF;
        for(int j(1); j<=n; ++j) {
            if(!vis[j]&&dis[j]<minn) {
                pos=j;
                minn=dis[j];
            }
        }
        vis[pos]=1;
        for(int j(1); j<=n; ++j)
            if(!vis[j])
                dis[j]=min(dis[j],dis[pos]+mp[pos][j]);
    }
    for(int i(1); i<=n; ++i)
        arr[i]+=dis[i];
}
int main() {
    int T = 0;
    scanf("%d", &T);
    while(T--) {
        int x;
        scanf("%d%d%d",&n,&m,&x);
        for(int i(1); i<=n; ++i)
            for(int j(1); j<=n; ++j) {
                if(i==j)
                    mp[i][j]=0;
                else
                    mp[i][j]=INF;
            }
        memset(arr,0,sizeof(arr));
        int a,b,c;
        while(m--) {
            scanf("%d%d%d",&a,&b,&c);
            if(a!=b && mp[a][b] >= c)
                mp[a][b]=c;
        }
        dijkstra(x,n);

        for(int i(1); i<n; ++i)
            for(int j(i+1); j<=n; ++j)
                swap(mp[i][j], mp[j][i]);
        dijkstra(x,n);

        int sum=0;
        for(int i(1); i<=n; ++i)
            sum=max(sum,arr[i]);
        if(sum >= INF)
            printf("Fail\n");
        else
            printf("%d\n", sum);
    }
}
