/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2019-05-24 15:00
* Filename      : D.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const double EPS = 1e-6;
const int MOD = 1e5;
const int INF = 0x3f3f3f3f;

#define MAXN 5500000
int prime[MAXN];
int phi[MAXN];
bool check[MAXN];
int tot;

void make_prime() {
    phi[1]=1;
    memset(check,true,sizeof(check));
    tot=0;
    for(int i=2; i<=MAXN; ++i) {
        if(check[i]) {
            prime[tot++]=i;
            phi[i]=i-1;
        }
        for(int j=0; j<tot&&i*prime[j]<=MAXN; ++j) {
            check[i*prime[j]]=false;
            if(i%prime[j]==0) {
                phi[i*prime[j]]=phi[i]*prime[j];
                break;
            } else
                phi[i*prime[j]]=phi[i]*(prime[j]-1);
        }
    }
}
int kase;

int main() {
    int T;
    make_prime();
    scanf("%d",&T);
    kase=0;
    ll num;
    while(T--) {
        int n;
        scanf("%d",&n);
        ll ans=0;
        for(int i=1; i<=n; ++i)
            ans+=phi[i];
        printf("%lld\n",(ans*2+1)%MOD);
    }
}
