/*********************************************************
* Author        : ArthurBi
* Email         : Arthurbqy1999@gmail.com
* Last modified : 2019-06-07 18:26
* Filename      : C.cpp
* Description   : Pls contact me if you have questions.
*********************************************************/
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <bitset>
#include <cstdlib>
#include <cmath>
#include <set>
#include <list>
#include <deque>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const double eps = 1e-6;
const int INF = 0x3f3f3f3f;
#define MAXN 100005

int n, a, b, p[MAXN], fa[MAXN];
map<int,int> mp;

inline int Find(int x) {
    int r=x,t;
    while(r!=fa[r])
        r=fa[r];
    while(x!=r) {
        t=fa[x];
        fa[x]=r;
        x=t;
    }
    return r;
}

inline void Union(int u,int v) {
    int uu=Find(u);
    int vv=Find(v);
    if(uu!=vv)
        fa[uu]=v;
}

int main() {
    scanf("%d%d%d",&n,&a,&b);
    int Max=0;
    for(int i(1); i<=n; ++i) {
        scanf("%d",&p[i]);
        mp[p[i]]=i;
        Max=max(Max,p[i]);
    }
    if(Max>=max(a,b))
        printf("-1\n");
    else {
        for(int i=0; i<=n+1; ++i)
            fa[i]=i;
        for(int i(1); i<=n; ++i) {
            if(mp[a-p[i]])
                Union(i,mp[a-p[i]]);
            else
                Union(i,n+1);
            if(mp[b-p[i]])
                Union(i,mp[b-p[i]]);
            else
                Union(i,0);
        }
        int A=Find(0);
        int B=Find(n+1);
        if(A!=B) {
            for(int i(1); i<=n; ++i) {
                if(i!=1)
                    printf(" ");
                if(Find(i)==A)
                    printf("0");
                else
                    printf("1");
            }
            printf("\n");
        } else
            printf("-1\n");
    }
    return 0;
}
