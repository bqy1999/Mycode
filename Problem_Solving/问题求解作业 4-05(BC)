%what is the homework? put it here.
%2017-03-20 4-4：群同态基本定理与正规子群
%理解抽象代数结构的基本概念
%理解群同态基本思想
%TJ第9、10、11章
%群同态、同构基本思想
%课后作业(截止日期: 2019-03-23 22:00)
%TJ第9章练习 11、23
%TJ第10章练习 11
%TJ第11章练习 5
%(选做) TJ第11章练习 17
%(选做) 在同构意义下, 给出所有的六阶群。
%(你可以再尝试给出所有的八阶群。)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                         My Template:                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%Code(C++): \begin{lstlisting}
%Algorithm:
%\begin{breakablealgorithm}
%  \caption{?statement}
%  \begin{algorithmic}[?number]
%    \Require ?input
%    \Ensure ?output
%    \Procedure{Equal}{?parameters}
%      \State ?blabla
%    \EndProcedure
%  \end{algorithmic}
%\end{breakablealgorithm}

%Itemlisting: \begin{itemize} or \begin{enumerate}[label=(\alph*)]

%Math equation: \begin{align*}

%Table: \begin{tabular}{|c|c|c|}
%           blabla | blabla | blabla \\
%           ......

%Picture
%\begin{figure}[!H]
% \centering
% \includegraphics[scale=0.6]{1.png}
% % \caption{this is a figure demo}
% \label{fig:label}
% \end{figure}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                         Title START!                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\documentclass[11pt, a4paper, UTF8]{ctexart}

    \input{preamble}

    \title{4-5：串匹配课前作业}
    \me{毕秋宇}{171860624}
    \date{\today}

    \begin{document}
    \maketitle
    \noplagiarism

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %                       Homework START!                        %
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    \beginthishw
    %%%%%%%%%%%%%%%%%%%%
    \begin{problem}[TC 32.1-2]
        Suppose that all characters in the pattern $P$ are different. Show how to accelerate $\text{NAIVE-STRING-MATCHER}$ to run in time $O(n)$ on an $n$-character text $T$.
    \end{problem}
    %\begin{remark}

    %\end{remark}

    \begin{solution}
        We can accelerate the procedure of checking $P[1\cdots m]==T[s+1,\cdots,s+m]$. If we find that $P[i]\neq T[s+i]$, then we set $s=s+i$. Because all characters in $P$ are different, so if $P[1,\cdots,i-1]= T[s+1,\cdots,s+i-1],P[i]\neq T[s+i]$ we can also have that $P[1]=T[s+1]\neq T[s+2]\cdots T[s+i-1]$. That means setting $s=s+i$ may not lose a valid shift $s$, every character in $T$ just needs to compare once, running time is $O(n)$.
    \end{solution}
    %%%%%%%%%%%%%%%%%%%%%
    \begin{problem}[TC 32.1-3]
        Suppose that pattern $P$ and text $T$ are randomly chosen strings of length $m$ and $n$, respectively, from the $d$-ary alphabet $\Sigma_d = \{ 0, 1, \ldots, d - 1 \}$, where $d \ge 2$. Show that the expected number of character-to-character comparisons made by the implicit loop in line 4 of the naive algorithm is

        $$(n - m + 1) \frac{1 - d^{-m}}{1 - d^{-1}} \le 2(n - m + 1)$$

        over all executions of this loop. (Assume that the naive algorithm stops comparing characters for a given shift once it finds a mismatch or matches the entire pattern.) Thus, for randomly chosen strings, the naive algorithm is quite efficient.
    \end{problem}

    %\begin{remark}

    %\end{remark}

    \begin{solution}
        There are $n-m+1$ possible values of $s$, so loop in line 3 may execute $n-m+1$ times. The probability of comparing one character in line 4 is $1$, the probability of comparing two character in line 4 is $1\times\frac{1}{d}$. So the average time of every possible shift is $1+\frac{1}{d}+\frac{1}{d^{2}}+\cdots+\frac{1}{d^{m-1}}=\frac{1-d^{-m}}{1-d^{-1}}$. Above all, the expected number of character-to-character comparisons made by the loop in line 4 is $(n-m+1)\frac{1-d^{-m}}{1-d^{-1}}$.
    \end{solution}
    %%%%%%%%%%%%%%%%%%%%%
    \begin{problem}[TC 32.2-3]
        Show how to extend the Rabin-Karp method to handle the problem of looking for a given $m \times m$ pattern in an $n \times n$ array of characters. (The pattern may be shifted vertically and horizontally, but it may not be rotated.)
    \end{problem}

    %\begin{remark}
    %\end{remark}

    \begin{solution}
        We just need to create a tuple $(a,b)$ to extend the Rabin-Karp method to solve the $m\times m$ pattern in an $n\times n$ array of characters. $h$ is also equals to $d^{m-1}$ mod $q$, $p^{0}=(dp^{0}+P[i])$ mod $q$, $p^{1}=(dp^{1}+P^{T}[i])$ mod $q$, $t_{0}^{0}=(dt^{0}_{0}+T[i])$ mod $q$, $t_{0}^{1}=(dt_{0}^{1}+T^{T}[i])$ mod $q$.
        So the matrix of Text is transformed to
            \[T=\left[\begin{matrix}
                (t_{0}^{0},t_{n}^{1})&&\cdots&&(t_{n}^{0},t_{n}^{1})\\
                \cdots && \cdots && \cdots\\
                (t_{0}^{0},t_{0}^{1})&&\cdots&&(t_{n}^{0},t_{0}^{1})\\
            \end{matrix}
                \right]
            \]
            In 10 line of the original algorithm, we change to $p^{0}==t^{0}$ and $p^{1}==t^{1}$. Then it works in the new problem
    \end{solution}
    %%%%%%%%%%%%%%%%%%%%%
    \begin{problem}[TC 32.3-1]
        Construct the string-matching automaton for the pattern $P = aabab$ and illustrate its operation on the text string $T = \text{aaababaabaababaab}$.
    \end{problem}
    \begin{solution}
        \

        \begin{tabular}{|c|c|c|}
            \hline
               state & $a$ & $b$\\
                \hline
                $0$ & $1$ & $0$ \\
                \hline
                $1$ & $2$ & $0$ \\
                \hline
                $2$ & $2$ & $3$ \\
                \hline
                $3$ & $4$ & $0$ \\
                \hline
                $4$ & $2$ & $5$ \\
                \hline
                $5$ & $1$ & $0$ \\
                \hline
        \end{tabular}
        \[state\phi(T_{i}):0\to1\to2\to2\to3\to4\to5\to1\to2\to3\to4\to2\to3\to4\to5\to1\to2\to3.\]
        So there are two valid shifts.
    \end{solution}
    %%%%%%%%%%%%%%%%%%%%%
    \begin{problem}[TC 32.3-3]
        We call a pattern $P$ \textbf{\emph{nonoverlappable}} if $P_k \sqsupset P_q$ implies $k = 0$ or $k = q$. Describe the state-transition diagram of the string-matching automaton for a nonoverlappable pattern.
    \end{problem}
    %\begin{remark}
    %\end{remark}
    \begin{solution}
        Just like this:
        \begin{figure}[H]
            \centering
            \includegraphics[scale=0.1]{1.jpeg}
            % \caption{this is a figure demo}
            % \label{fig:label}
        \end{figure}
    \end{solution}
    %%%%%%%%%%%%%%%%%%%%
    %\newpage
    %%%%%%%%%%%%%%%%%%%%


    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %                      Correction START!                       %
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begincorrection
%%%%%%%%%%%%%%%%%%%%
%\begin{problem}[]

%\end{problem}

%\begin{cause}
%
%\end{cause}

%\begin{revision}

%\end{revision}
%%%%%%%%%%%%%%%%%%%%
%\newpage
%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                       Feedback START!                        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\beginfb
%\begin{itemize}
%
%\end{itemize}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                        Homework END!                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end{document}
