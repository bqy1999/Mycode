改革春风吹满地
多边形面积的叉乘法！

#include <stdio.h>

int main(){
    int n=0;
    double sum=0;
    int arr[100][2] ={0};
    int a_x,a_y,b_x,b_y=0;
    int cx=0;

    while (scanf("%d",&n)!= EOF){
        if(n==0)break;
        sum=0;
        for (int i = 0; i < n; ++i) {
            scanf("%d %d",&arr[i][0],&arr[i][1]);
        }

        for (int j = 0; j < n; ++j) {
            a_x=arr[j][0];
            a_y=arr[j][1];
            b_x=arr[(j+1)%n][0];
            b_y=arr[(j+1)%n][1];
            cx=a_x*b_y-a_y*b_x;
            sum+=cx/2.00;
        }
        if(sum<0)printf("%.1f\n",-sum);
        else printf("%.1f\n",sum);
    }

    return 0;
}
-------------------------------------------------------------------------------------------------------------------------------------------

//hint:这题看似难解，其实只要知道了公式之后还是相对容易解决的

在坐标系中求多边形面积的通法：叉乘法！！！
从第一个点开始，每一个点都和它下一个点做向量的叉乘运算，如a(x_1,y_1); b(x_2,y_2);
ab之间的叉乘为：((x_1*y_2)-(x_2*y_1))/2！！！
注意叉乘运算之间的是！！！减号(-)！！！
叉乘运算得到的是当前两个点关于坐标原点的有向面积，也就是说叉乘得到的面积是带正负号的，
这时候不能够加绝对值！！！
要将所有的有向面积全部加起来之后才能够取绝对值，
什么时候会出现有向面积为负的情况呢？
当两点与坐标原点形成的面积不在多面性包裹的内部时，有向面积就为负值。
这个方法对于凸多边形和凹多边形都是适用的！
