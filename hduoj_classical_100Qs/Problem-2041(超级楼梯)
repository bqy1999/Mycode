超级楼梯

#include <stdio.h>

int main(){
    int n,m=0;
    int arr[40]={0};
    arr[0]=1;
    arr[1]=1;
    for (int j = 2; j < 40; ++j) {
        arr[j]=arr[j-1]+arr[j-2];
    }

    scanf("%d",&n);
    for (int i = 0; i < n; ++i) {
        scanf("%d",&m);
        printf("%d\n",arr[m-1]);
    }
    return 0;
}
---------------------------------------------------------------------------------------------------------------------------------------

//hint:这题其实就是斐波那契数列的一个变种
//第M级台阶只有可能M-1级台阶向上一步，或者由M-2级台阶向上两步得到
//所以S(M)=S(M-1)+S(M-2)，即到达M级台阶的方法是到达M-1级与到达M-2级台阶的方法的总和
//而当M=1时，原地不动，记为有一种方法
//当M=2时，只有向上一步这一种方法，很容易的出为1，1，2，3，4，8......数列
