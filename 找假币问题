//假设已知假币比真币要轻

#include<iostream>
#include<stdlib.h>
using namespace std;

int index = 0;
int underindex = 0;
void divideThree(int num1, int num2, int *arr)
//三分从num1个硬币开始到num2个硬币结束
{
	index++;
	underindex += num1;
	int length = num2 - num1 + 1;
	//计算待测的硬币的总个数
	int *arr2;
	arr2 = new int[length];
	//创建一个新的数组arr2来安放待三分的硬币
	for (int i = 0; i < length; i++)
	{
		arr2[i] = arr[num1-1 + i];
	}
	//将待测的硬币放入新数组中
	if (length == 1)
		//如果硬币剩余1个
	{
		//只剩下一个硬币也就没有必要称量了
		cout << "原硬币中第"<<underindex-(index-1)<<"个位置的硬币是假币" << endl;
		index--;
		cout << "总计称量" << index << "次！" << endl<<endl;
	}
	if (length == 2)
		//如果硬币剩余2个
	{
		cout << endl<<"第" << index << "次称重！" << endl;
		cout << "比较第一个硬币和第二个硬币" << endl;
		if (arr2[0] > arr2[1])
		{
			cout << "第一个硬币轻" << endl;
			cout << "原硬币中第" << underindex - (index - 1) << "个位置的硬币是假币" << endl;
			cout << "总计称量" << index << "次！" << endl << endl;
		}
		if (arr2[0] < arr2[1])
		{
			cout << "第二个硬币轻" << endl;
			cout << "原硬币中第" << underindex - (index - 2) << "个位置的硬币是假币" << endl;
			cout << "总计称量" << index << "次！" << endl << endl;
		}
	}
	if (length == 3)
	{
		cout << endl<<"第" << index << "次称重！" << endl;
		cout << "比较第一和第二个硬币"<< endl;
		if (arr2[0] == arr2[1])
		{
			cout << "第一第二个硬币一样重" << endl;
			cout << "原硬币中第" << underindex - (index - 3) << "个位置的硬币是假币" << endl;
			cout << "总计称量" << index  << "次！" << endl<<endl;
		}
		if (arr2[0] > arr2[1])
		{
			cout << "第一个硬币轻" << endl;
			cout << "原硬币中第" << underindex - (index - 1) << "个位置的硬币是假币" << endl;
			cout << "总计称量" << index  << "次！" << endl<<endl;
		}
		if (arr2[0] < arr2[1])
		{
			cout << "第二个硬币轻" << endl;
			cout << "原硬币中第" << underindex - (index - 2) << "个位置的硬币是假币" << endl;
			cout << "总计称量" << index  << "次！" << endl<<endl;
		}
	}

	if (length != 3 && length % 3 == 0)
		//如果待测的硬币个数可以正好被三分
	{
		cout << endl<<"第" << index << "次称重！" << endl;
		cout << "将第" << 1 << "到第" << length / 3 << "个硬币分为第一堆" << "；第" << (length / 3) + 1 << "到第" << (length / 3) * 2 << "个硬币分为第二堆；其余分为第三堆" << endl;
		int sum1 = 0;
		int sum2 = 0;
		for (int i = 0; i < length / 3; i++)
		{
			sum1 += arr2[i];
		}
		//求出第一堆的总和
		for (int i = length / 3; i < (length / 3) * 2; i++)
		{
			sum2 += arr2[i];
		}
		//求出第二堆的总和
		if (sum1 == sum2)
		{
			cout << "两堆一样重，将第三堆从1开始重新排序进行称量" << endl;
			divideThree((length / 3) * 2 + 1, length, arr2);
		}
		//如果第一堆和第二堆硬币等重，那么假币在第三堆硬币中
		if (sum1 > sum2)
		{
			cout << "第一堆轻，将第一堆从1开始重新排序进行称量" << endl;
			divideThree(1, length / 3, arr2);
		}
		//如果sum1>sum2那么假币在第一堆硬币之中
		if (sum2 > sum1)
		{
			cout << "第二堆轻，将第二堆从1开始重新排序进行称量" << endl;
			divideThree((length / 3) + 1, (length / 3) * 2, arr2);
		}
		//如果sum2>sum1那么假币在第二堆硬币之中
	}
	if (length != 1 &&length % 3 == 1)
		//如果待测的硬币个数被三除后余1
	{
		cout <<endl<< "第" << index << "次称重！" << endl;
		if (length == 4)
		{
			cout << "比较第一和第二个硬币" << endl;
		}
		else
		{
			cout << "将第" << 1 << "到第" << (length - 1) / 3 << "个硬币分为第一堆" << "；第" << ((length - 1) / 3) + 1 << "到第" << ((length - 1) / 3) * 2 << "个硬币分为第二堆；其余分为第三堆" << endl;
		}
		int sum1 = 0;
		int sum2 = 0;
		for (int i = 0; i < (length - 1) / 3; i++)
		{
			sum1 += arr2[i];
		}
		//求出第一堆的总和
		for (int i = (length - 1) / 3; i < ((length - 1) / 3) * 2; i++)
		{
			sum2 += arr2[i];
		}
		//求出第二堆的总和
		if (sum1 == sum2)
		{
			cout << "两堆一样重，将第三堆从1开始重新排序进行称量" << endl;
			divideThree(((length - 1) / 3) * 2 + 1, length, arr2);			
		}
		//如果第一堆和第二堆硬币等重，那么假币在第三堆硬币中
		if (sum1 > sum2)
		{
			cout << "第一堆轻，将第一堆从1开始重新排序进行称量" << endl;
			divideThree(1, (length - 1) / 3, arr2);
		}
		//如果sum1>sum2那么假币在第一堆硬币之中
		if (sum2 > sum1)
		{
			cout << "第二堆轻，将第二堆从1开始重新排序进行称量" << endl;
			divideThree(((length - 1) / 3) + 1, ((length - 1) / 3) * 2, arr2);
		}
		//如果sum2>sum1那么假币在第二堆硬币之中
	}
	if (length != 2 &&length % 3 == 2)
		//如果待测的硬币个数被三除后余2
	{
		cout <<endl<< "第" << index << "次称重！" << endl;
		if (length == 5)
		{
			cout << "比较第一和第二个硬币" << endl;
		}
		else
		{ 
			cout << "将第" << 1 << "到第" << (length - 2) / 3 << "个硬币分为第一堆" << "；第" << ((length - 2) / 3) + 1 << "到第" << ((length - 2) / 3) * 2 << "个硬币分为第二堆；其余分为第三堆" << endl;
		}
		int sum1 = 0;
		int sum2 = 0;
		for (int i = 0; i < (length - 2) / 3; i++)
		{
			sum1 += arr2[i];
		}
		//求出第一堆的总和
		for (int i = (length - 2) / 3; i < ((length - 2) / 3) * 2; i++)
		{
			sum2 += arr2[i];
		}
		//求出第二堆的总和
		if (sum1 == sum2)
		{
			cout << "两堆一样重，将第三堆从1开始重新排序进行称量" << endl;
			divideThree(((length - 2) / 3) * 2 + 1, length, arr2);
		}
		//如果第一堆和第二堆硬币等重，那么假币在第三堆硬币中
		if (sum1 > sum2)
		{
			cout << "第一堆轻，将第一堆从1开始重新排序进行称量" << endl;
			divideThree(1, (length - 2) / 3, arr2);
		}
		//如果sum1>sum2那么假币在第一堆硬币之中
		if (sum2 > sum1)
		{
			cout << "第二堆轻，将第二堆从1开始重新排序进行称量" << endl;
			divideThree(((length - 2) / 3) + 1, ((length - 2) / 3) * 2, arr2);
		}
		//如果sum2>sum1那么假币在第二堆硬币之中
	}

}

int main()
{
	cout << "假设假币比真币轻！" << endl;
	int *arr;
	int n, m;
	cout << "请输入硬币总个数" << endl;
	cin >> n;
	cout << "请输入假币所在的位置" << endl;
	cin >> m;
	//n = 9;
	//m = 3;
	//输入硬币总个数n和假币所在的位置m
	arr = new int[n];
	//创建硬币的数组

	for (int i = 0; i < n; i++)
	{
		if (i == m - 1)arr[i] = 1;
		else arr[i] = 0;
	}
	//第m个硬币为假币，其数值赋为1，其余真硬币赋为0

	//通过三分法来找出假币
	divideThree(1, n, arr);
	system("pause");
	return 0;
}
