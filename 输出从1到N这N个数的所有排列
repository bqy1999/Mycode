//create by bqy1999 17/11/12
//produce all the permutations of the set A3.

#include<iostream>
using namespace std;

int index=0;
int needindex[101]={0};
int count=0;

void have_permutation(int cur,int length,int * A,int * B,int *needindex);

int main()
{
    int length = 0;
    cin >> length;
    int *A = (int*)malloc(sizeof(int) * length);
    int *B = (int*)malloc(sizeof(int) * length);

    int time=0;
    cin>>time;


    for (int i = 0; i < length; ++i) {
        A[i] = 1;
    }

    for(int i=0;i<time;++i){
        cin>>needindex[i];
    }
    have_permutation(0,length, A, B,needindex);
    //cout<<needindex[0]<<endl;
    return 0;

}

void have_permutation(int cur,int length, int * A, int * B,int *needindex)
{
    if (cur >= length) {
        index++;
        if(needindex[count]==index){
            cout<<'{'<<B[0];
            for (int i = 1; i < length-1; ++i) {
                cout <<','<<B[i];
            }
            cout<<','<<B[length-1]<<'}'<<endl;
            //cout<<needindex[count]<<endl;
            count++;
        }
        //count++;
        //cout<<"count:"<<count<<endl;
        //cout<<"index:"<<index<<endl<<endl;
        //isGo=1;
    }
    else {
        for (int i = 0; i < length; ++i) {
            if (A[i] == 1){
                B[cur] = i + 1;
                A[i] = 0;
                have_permutation(cur + 1, length, A, B,needindex);
                A[i] = 1;
            }
        }
    }
}
